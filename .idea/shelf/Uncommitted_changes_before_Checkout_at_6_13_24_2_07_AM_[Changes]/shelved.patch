Index: src/mainapp.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#include \"mainapp.hpp\"\n\n#include <glad/glad.h>\n#include <imgui.h>\n#include <glm/glm.hpp>\n#include <glm/gtc/type_ptr.hpp>\nusing namespace glm;\n\n#include \"framework/app.hpp\"\n\n#include \"framework/imguiutil.hpp\"\n\n#include <iostream>\n\nMainApp::MainApp() : App(800, 600) {\n    App::setTitle(\"cgintro\"); // set title\n    App::setVSync(true); // Limit framerate\n\n    fireshader.load(\"fireshader.vert\", \"fireshader.frag\");\n    fireshader.set(\"uWorldToClip\", coolCamera.projection() * coolCamera.view());\n\n    lightDir = glm::vec3(1.0f);\n}\n\nvoid MainApp::init() {\n    glEnable(GL_DEPTH_TEST);\n    glEnable(GL_CULL_FACE);\n}\n\n\n\nvoid MainApp::render() {\n    glm::vec3 pos = deCasteljau(spline, t);\n\n    coolCamera.moveTo(pos);\n    coolCamera.lookAt(glm::vec3(0.0f));\n\n    if (coolCamera.updateIfChanged()) {\n        fireshader.set(\"uWorldToClip\", coolCamera.projection() * coolCamera.view());\n    }\n\n    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\n\n    fireshader.bind();\n}\n\nvoid MainApp::keyCallback(Key key, Action action) {\n    float cameraSpeed = 2.5f;\n\n    if (action != Action::REPEAT) return;\n\n    if (key == Key::W) {\n        coolCamera.move(delta * cameraSpeed * coolCamera.m_Direction);\n    }\n    else if (key == Key::S) {\n        coolCamera.move(-delta * cameraSpeed * coolCamera.m_Direction);\n    }\n    else if (key == Key::A) {\n        coolCamera.move(-delta * cameraSpeed * coolCamera.m_Right);\n    }\n    else if (key == Key::D) {\n        coolCamera.move(delta * cameraSpeed * coolCamera.m_Right);\n    }\n    else if (key == Key::SPACE) {\n        coolCamera.move(delta * cameraSpeed * coolCamera.m_Up);\n    }\n    else if (key == Key::LEFT_SHIFT) {\n        coolCamera.move(-delta * cameraSpeed * coolCamera.m_Up);\n    }\n}\n\nvoid MainApp::scrollCallback(float amount) {\n    coolCamera.zoom(0.1f * amount);\n}\n\nvoid MainApp::moveCallback(const vec2& movement, bool leftButton, bool rightButton, bool middleButton) {\n    if (leftButton || rightButton || middleButton) {\n        coolCamera.rotate(0.002f * movement);\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/mainapp.cpp b/src/mainapp.cpp
--- a/src/mainapp.cpp	
+++ b/src/mainapp.cpp	
@@ -29,54 +29,6 @@
 
 
 
-void MainApp::render() {
-    glm::vec3 pos = deCasteljau(spline, t);
-
-    coolCamera.moveTo(pos);
-    coolCamera.lookAt(glm::vec3(0.0f));
-
-    if (coolCamera.updateIfChanged()) {
-        fireshader.set("uWorldToClip", coolCamera.projection() * coolCamera.view());
-    }
-
-    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-
-    fireshader.bind();
-}
-
-void MainApp::keyCallback(Key key, Action action) {
-    float cameraSpeed = 2.5f;
-
-    if (action != Action::REPEAT) return;
-
-    if (key == Key::W) {
-        coolCamera.move(delta * cameraSpeed * coolCamera.m_Direction);
-    }
-    else if (key == Key::S) {
-        coolCamera.move(-delta * cameraSpeed * coolCamera.m_Direction);
-    }
-    else if (key == Key::A) {
-        coolCamera.move(-delta * cameraSpeed * coolCamera.m_Right);
-    }
-    else if (key == Key::D) {
-        coolCamera.move(delta * cameraSpeed * coolCamera.m_Right);
-    }
-    else if (key == Key::SPACE) {
-        coolCamera.move(delta * cameraSpeed * coolCamera.m_Up);
-    }
-    else if (key == Key::LEFT_SHIFT) {
-        coolCamera.move(-delta * cameraSpeed * coolCamera.m_Up);
-    }
-}
 
-void MainApp::scrollCallback(float amount) {
-    coolCamera.zoom(0.1f * amount);
-}
-
-void MainApp::moveCallback(const vec2& movement, bool leftButton, bool rightButton, bool middleButton) {
-    if (leftButton || rightButton || middleButton) {
-        coolCamera.rotate(0.002f * movement);
-    }
-}
 
 
